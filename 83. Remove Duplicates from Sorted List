/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
       if(head==null||head.next==null){
           return head;
       } 
        HashSet<Integer> hs = new HashSet<>();
        ListNode prev = null;
        ListNode next = head.next;
        ListNode current = head;
        while(current.next!=null){
if(hs.contains(current.val)){
    prev.next=next;
    next = next.next;
    current = current.next;
}
            else
            {
                hs.add(current.val);
                prev = current;
                current = next;
                next = next.next;
            }
            
                
            }
        if(hs.contains(current.val)){
            prev.next = null;
        
        }
        return head;
        }
    }

